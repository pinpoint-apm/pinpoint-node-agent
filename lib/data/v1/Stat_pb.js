// source: v1/Stat.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var v1_ThreadDump_pb = require('../v1/ThreadDump_pb.js');
goog.object.extend(proto, v1_ThreadDump_pb);
goog.exportSymbol('proto.v1.PActiveTrace', null, global);
goog.exportSymbol('proto.v1.PActiveTraceHistogram', null, global);
goog.exportSymbol('proto.v1.PAgentInfo', null, global);
goog.exportSymbol('proto.v1.PAgentStat', null, global);
goog.exportSymbol('proto.v1.PAgentStatBatch', null, global);
goog.exportSymbol('proto.v1.PAgentUriStat', null, global);
goog.exportSymbol('proto.v1.PCpuLoad', null, global);
goog.exportSymbol('proto.v1.PDataSource', null, global);
goog.exportSymbol('proto.v1.PDataSourceList', null, global);
goog.exportSymbol('proto.v1.PDeadlock', null, global);
goog.exportSymbol('proto.v1.PDirectBuffer', null, global);
goog.exportSymbol('proto.v1.PEachUriStat', null, global);
goog.exportSymbol('proto.v1.PFileDescriptor', null, global);
goog.exportSymbol('proto.v1.PJvmGc', null, global);
goog.exportSymbol('proto.v1.PJvmGcDetailed', null, global);
goog.exportSymbol('proto.v1.PJvmGcType', null, global);
goog.exportSymbol('proto.v1.PJvmInfo', null, global);
goog.exportSymbol('proto.v1.PLoadedClass', null, global);
goog.exportSymbol('proto.v1.PPing', null, global);
goog.exportSymbol('proto.v1.PResponseTime', null, global);
goog.exportSymbol('proto.v1.PServerMetaData', null, global);
goog.exportSymbol('proto.v1.PServiceInfo', null, global);
goog.exportSymbol('proto.v1.PStatMessage', null, global);
goog.exportSymbol('proto.v1.PStatMessage.FieldCase', null, global);
goog.exportSymbol('proto.v1.PTotalThread', null, global);
goog.exportSymbol('proto.v1.PTransaction', null, global);
goog.exportSymbol('proto.v1.PUriHistogram', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PPing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PPing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PPing.displayName = 'proto.v1.PPing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PStatMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.v1.PStatMessage.oneofGroups_);
};
goog.inherits(proto.v1.PStatMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PStatMessage.displayName = 'proto.v1.PStatMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PAgentInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PAgentInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PAgentInfo.displayName = 'proto.v1.PAgentInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PServerMetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.PServerMetaData.repeatedFields_, null);
};
goog.inherits(proto.v1.PServerMetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PServerMetaData.displayName = 'proto.v1.PServerMetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PServiceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.PServiceInfo.repeatedFields_, null);
};
goog.inherits(proto.v1.PServiceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PServiceInfo.displayName = 'proto.v1.PServiceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PJvmInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PJvmInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PJvmInfo.displayName = 'proto.v1.PJvmInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PAgentStat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PAgentStat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PAgentStat.displayName = 'proto.v1.PAgentStat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PAgentStatBatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.PAgentStatBatch.repeatedFields_, null);
};
goog.inherits(proto.v1.PAgentStatBatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PAgentStatBatch.displayName = 'proto.v1.PAgentStatBatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PDataSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PDataSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PDataSource.displayName = 'proto.v1.PDataSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PDataSourceList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.PDataSourceList.repeatedFields_, null);
};
goog.inherits(proto.v1.PDataSourceList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PDataSourceList.displayName = 'proto.v1.PDataSourceList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PFileDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PFileDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PFileDescriptor.displayName = 'proto.v1.PFileDescriptor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PJvmGc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PJvmGc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PJvmGc.displayName = 'proto.v1.PJvmGc';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PJvmGcDetailed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PJvmGcDetailed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PJvmGcDetailed.displayName = 'proto.v1.PJvmGcDetailed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PCpuLoad = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PCpuLoad, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PCpuLoad.displayName = 'proto.v1.PCpuLoad';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PTransaction.displayName = 'proto.v1.PTransaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PActiveTraceHistogram = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.PActiveTraceHistogram.repeatedFields_, null);
};
goog.inherits(proto.v1.PActiveTraceHistogram, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PActiveTraceHistogram.displayName = 'proto.v1.PActiveTraceHistogram';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PActiveTrace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PActiveTrace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PActiveTrace.displayName = 'proto.v1.PActiveTrace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PResponseTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PResponseTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PResponseTime.displayName = 'proto.v1.PResponseTime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PDeadlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.PDeadlock.repeatedFields_, null);
};
goog.inherits(proto.v1.PDeadlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PDeadlock.displayName = 'proto.v1.PDeadlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PDirectBuffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PDirectBuffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PDirectBuffer.displayName = 'proto.v1.PDirectBuffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PTotalThread = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PTotalThread, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PTotalThread.displayName = 'proto.v1.PTotalThread';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PLoadedClass = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PLoadedClass, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PLoadedClass.displayName = 'proto.v1.PLoadedClass';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PAgentUriStat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.PAgentUriStat.repeatedFields_, null);
};
goog.inherits(proto.v1.PAgentUriStat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PAgentUriStat.displayName = 'proto.v1.PAgentUriStat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PEachUriStat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.PEachUriStat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PEachUriStat.displayName = 'proto.v1.PEachUriStat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.PUriHistogram = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.PUriHistogram.repeatedFields_, null);
};
goog.inherits(proto.v1.PUriHistogram, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.PUriHistogram.displayName = 'proto.v1.PUriHistogram';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PPing.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PPing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PPing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PPing.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PPing}
 */
proto.v1.PPing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PPing;
  return proto.v1.PPing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PPing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PPing}
 */
proto.v1.PPing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PPing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PPing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PPing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PPing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.v1.PStatMessage.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.v1.PStatMessage.FieldCase = {
  FIELD_NOT_SET: 0,
  AGENTSTAT: 1,
  AGENTSTATBATCH: 2,
  AGENTURISTAT: 3
};

/**
 * @return {proto.v1.PStatMessage.FieldCase}
 */
proto.v1.PStatMessage.prototype.getFieldCase = function() {
  return /** @type {proto.v1.PStatMessage.FieldCase} */(jspb.Message.computeOneofCase(this, proto.v1.PStatMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PStatMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PStatMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PStatMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PStatMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    agentstat: (f = msg.getAgentstat()) && proto.v1.PAgentStat.toObject(includeInstance, f),
    agentstatbatch: (f = msg.getAgentstatbatch()) && proto.v1.PAgentStatBatch.toObject(includeInstance, f),
    agenturistat: (f = msg.getAgenturistat()) && proto.v1.PAgentUriStat.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PStatMessage}
 */
proto.v1.PStatMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PStatMessage;
  return proto.v1.PStatMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PStatMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PStatMessage}
 */
proto.v1.PStatMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.PAgentStat;
      reader.readMessage(value,proto.v1.PAgentStat.deserializeBinaryFromReader);
      msg.setAgentstat(value);
      break;
    case 2:
      var value = new proto.v1.PAgentStatBatch;
      reader.readMessage(value,proto.v1.PAgentStatBatch.deserializeBinaryFromReader);
      msg.setAgentstatbatch(value);
      break;
    case 3:
      var value = new proto.v1.PAgentUriStat;
      reader.readMessage(value,proto.v1.PAgentUriStat.deserializeBinaryFromReader);
      msg.setAgenturistat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PStatMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PStatMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PStatMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PStatMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAgentstat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.v1.PAgentStat.serializeBinaryToWriter
    );
  }
  f = message.getAgentstatbatch();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.v1.PAgentStatBatch.serializeBinaryToWriter
    );
  }
  f = message.getAgenturistat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.v1.PAgentUriStat.serializeBinaryToWriter
    );
  }
};


/**
 * optional PAgentStat agentStat = 1;
 * @return {?proto.v1.PAgentStat}
 */
proto.v1.PStatMessage.prototype.getAgentstat = function() {
  return /** @type{?proto.v1.PAgentStat} */ (
    jspb.Message.getWrapperField(this, proto.v1.PAgentStat, 1));
};


/**
 * @param {?proto.v1.PAgentStat|undefined} value
 * @return {!proto.v1.PStatMessage} returns this
*/
proto.v1.PStatMessage.prototype.setAgentstat = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.v1.PStatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PStatMessage} returns this
 */
proto.v1.PStatMessage.prototype.clearAgentstat = function() {
  return this.setAgentstat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PStatMessage.prototype.hasAgentstat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PAgentStatBatch agentStatBatch = 2;
 * @return {?proto.v1.PAgentStatBatch}
 */
proto.v1.PStatMessage.prototype.getAgentstatbatch = function() {
  return /** @type{?proto.v1.PAgentStatBatch} */ (
    jspb.Message.getWrapperField(this, proto.v1.PAgentStatBatch, 2));
};


/**
 * @param {?proto.v1.PAgentStatBatch|undefined} value
 * @return {!proto.v1.PStatMessage} returns this
*/
proto.v1.PStatMessage.prototype.setAgentstatbatch = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.v1.PStatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PStatMessage} returns this
 */
proto.v1.PStatMessage.prototype.clearAgentstatbatch = function() {
  return this.setAgentstatbatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PStatMessage.prototype.hasAgentstatbatch = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PAgentUriStat agentUriStat = 3;
 * @return {?proto.v1.PAgentUriStat}
 */
proto.v1.PStatMessage.prototype.getAgenturistat = function() {
  return /** @type{?proto.v1.PAgentUriStat} */ (
    jspb.Message.getWrapperField(this, proto.v1.PAgentUriStat, 3));
};


/**
 * @param {?proto.v1.PAgentUriStat|undefined} value
 * @return {!proto.v1.PStatMessage} returns this
*/
proto.v1.PStatMessage.prototype.setAgenturistat = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.v1.PStatMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PStatMessage} returns this
 */
proto.v1.PStatMessage.prototype.clearAgenturistat = function() {
  return this.setAgenturistat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PStatMessage.prototype.hasAgenturistat = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PAgentInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PAgentInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PAgentInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PAgentInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ports: jspb.Message.getFieldWithDefault(msg, 3, ""),
    servicetype: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    agentversion: jspb.Message.getFieldWithDefault(msg, 6, ""),
    vmversion: jspb.Message.getFieldWithDefault(msg, 7, ""),
    endtimestamp: jspb.Message.getFieldWithDefault(msg, 8, 0),
    endstatus: jspb.Message.getFieldWithDefault(msg, 9, 0),
    servermetadata: (f = msg.getServermetadata()) && proto.v1.PServerMetaData.toObject(includeInstance, f),
    jvminfo: (f = msg.getJvminfo()) && proto.v1.PJvmInfo.toObject(includeInstance, f),
    container: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PAgentInfo}
 */
proto.v1.PAgentInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PAgentInfo;
  return proto.v1.PAgentInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PAgentInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PAgentInfo}
 */
proto.v1.PAgentInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPorts(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServicetype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentversion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVmversion(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndtimestamp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEndstatus(value);
      break;
    case 10:
      var value = new proto.v1.PServerMetaData;
      reader.readMessage(value,proto.v1.PServerMetaData.deserializeBinaryFromReader);
      msg.setServermetadata(value);
      break;
    case 11:
      var value = new proto.v1.PJvmInfo;
      reader.readMessage(value,proto.v1.PJvmInfo.deserializeBinaryFromReader);
      msg.setJvminfo(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PAgentInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PAgentInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PAgentInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PAgentInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPorts();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getServicetype();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAgentversion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getVmversion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEndtimestamp();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getEndstatus();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getServermetadata();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.v1.PServerMetaData.serializeBinaryToWriter
    );
  }
  f = message.getJvminfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.v1.PJvmInfo.serializeBinaryToWriter
    );
  }
  f = message.getContainer();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * optional string hostname = 1;
 * @return {string}
 */
proto.v1.PAgentInfo.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setHostname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ip = 2;
 * @return {string}
 */
proto.v1.PAgentInfo.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setIp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ports = 3;
 * @return {string}
 */
proto.v1.PAgentInfo.prototype.getPorts = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setPorts = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 serviceType = 4;
 * @return {number}
 */
proto.v1.PAgentInfo.prototype.getServicetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setServicetype = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 pid = 5;
 * @return {number}
 */
proto.v1.PAgentInfo.prototype.getPid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setPid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string agentVersion = 6;
 * @return {string}
 */
proto.v1.PAgentInfo.prototype.getAgentversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setAgentversion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string vmVersion = 7;
 * @return {string}
 */
proto.v1.PAgentInfo.prototype.getVmversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setVmversion = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 endTimestamp = 8;
 * @return {number}
 */
proto.v1.PAgentInfo.prototype.getEndtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setEndtimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 endStatus = 9;
 * @return {number}
 */
proto.v1.PAgentInfo.prototype.getEndstatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setEndstatus = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional PServerMetaData serverMetaData = 10;
 * @return {?proto.v1.PServerMetaData}
 */
proto.v1.PAgentInfo.prototype.getServermetadata = function() {
  return /** @type{?proto.v1.PServerMetaData} */ (
    jspb.Message.getWrapperField(this, proto.v1.PServerMetaData, 10));
};


/**
 * @param {?proto.v1.PServerMetaData|undefined} value
 * @return {!proto.v1.PAgentInfo} returns this
*/
proto.v1.PAgentInfo.prototype.setServermetadata = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.clearServermetadata = function() {
  return this.setServermetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentInfo.prototype.hasServermetadata = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PJvmInfo jvmInfo = 11;
 * @return {?proto.v1.PJvmInfo}
 */
proto.v1.PAgentInfo.prototype.getJvminfo = function() {
  return /** @type{?proto.v1.PJvmInfo} */ (
    jspb.Message.getWrapperField(this, proto.v1.PJvmInfo, 11));
};


/**
 * @param {?proto.v1.PJvmInfo|undefined} value
 * @return {!proto.v1.PAgentInfo} returns this
*/
proto.v1.PAgentInfo.prototype.setJvminfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.clearJvminfo = function() {
  return this.setJvminfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentInfo.prototype.hasJvminfo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool container = 12;
 * @return {boolean}
 */
proto.v1.PAgentInfo.prototype.getContainer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.v1.PAgentInfo} returns this
 */
proto.v1.PAgentInfo.prototype.setContainer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.PServerMetaData.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PServerMetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PServerMetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PServerMetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PServerMetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverinfo: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vmargList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    serviceinfoList: jspb.Message.toObjectList(msg.getServiceinfoList(),
    proto.v1.PServiceInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PServerMetaData}
 */
proto.v1.PServerMetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PServerMetaData;
  return proto.v1.PServerMetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PServerMetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PServerMetaData}
 */
proto.v1.PServerMetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerinfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addVmarg(value);
      break;
    case 3:
      var value = new proto.v1.PServiceInfo;
      reader.readMessage(value,proto.v1.PServiceInfo.deserializeBinaryFromReader);
      msg.addServiceinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PServerMetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PServerMetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PServerMetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PServerMetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerinfo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVmargList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getServiceinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.v1.PServiceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string serverInfo = 1;
 * @return {string}
 */
proto.v1.PServerMetaData.prototype.getServerinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PServerMetaData} returns this
 */
proto.v1.PServerMetaData.prototype.setServerinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string vmArg = 2;
 * @return {!Array<string>}
 */
proto.v1.PServerMetaData.prototype.getVmargList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.v1.PServerMetaData} returns this
 */
proto.v1.PServerMetaData.prototype.setVmargList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.v1.PServerMetaData} returns this
 */
proto.v1.PServerMetaData.prototype.addVmarg = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.PServerMetaData} returns this
 */
proto.v1.PServerMetaData.prototype.clearVmargList = function() {
  return this.setVmargList([]);
};


/**
 * repeated PServiceInfo serviceInfo = 3;
 * @return {!Array<!proto.v1.PServiceInfo>}
 */
proto.v1.PServerMetaData.prototype.getServiceinfoList = function() {
  return /** @type{!Array<!proto.v1.PServiceInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.PServiceInfo, 3));
};


/**
 * @param {!Array<!proto.v1.PServiceInfo>} value
 * @return {!proto.v1.PServerMetaData} returns this
*/
proto.v1.PServerMetaData.prototype.setServiceinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.v1.PServiceInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.PServiceInfo}
 */
proto.v1.PServerMetaData.prototype.addServiceinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.v1.PServiceInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.PServerMetaData} returns this
 */
proto.v1.PServerMetaData.prototype.clearServiceinfoList = function() {
  return this.setServiceinfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.PServiceInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PServiceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PServiceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PServiceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PServiceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    servicelibList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PServiceInfo}
 */
proto.v1.PServiceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PServiceInfo;
  return proto.v1.PServiceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PServiceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PServiceInfo}
 */
proto.v1.PServiceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addServicelib(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PServiceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PServiceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PServiceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PServiceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServicelibList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string serviceName = 1;
 * @return {string}
 */
proto.v1.PServiceInfo.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PServiceInfo} returns this
 */
proto.v1.PServiceInfo.prototype.setServicename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string serviceLib = 2;
 * @return {!Array<string>}
 */
proto.v1.PServiceInfo.prototype.getServicelibList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.v1.PServiceInfo} returns this
 */
proto.v1.PServiceInfo.prototype.setServicelibList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.v1.PServiceInfo} returns this
 */
proto.v1.PServiceInfo.prototype.addServicelib = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.PServiceInfo} returns this
 */
proto.v1.PServiceInfo.prototype.clearServicelibList = function() {
  return this.setServicelibList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PJvmInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PJvmInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PJvmInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PJvmInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, 0),
    vmversion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gctype: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PJvmInfo}
 */
proto.v1.PJvmInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PJvmInfo;
  return proto.v1.PJvmInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PJvmInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PJvmInfo}
 */
proto.v1.PJvmInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVmversion(value);
      break;
    case 3:
      var value = /** @type {!proto.v1.PJvmGcType} */ (reader.readEnum());
      msg.setGctype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PJvmInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PJvmInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PJvmInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PJvmInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVmversion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGctype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional int32 version = 1;
 * @return {number}
 */
proto.v1.PJvmInfo.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmInfo} returns this
 */
proto.v1.PJvmInfo.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string vmVersion = 2;
 * @return {string}
 */
proto.v1.PJvmInfo.prototype.getVmversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PJvmInfo} returns this
 */
proto.v1.PJvmInfo.prototype.setVmversion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PJvmGcType gcType = 3;
 * @return {!proto.v1.PJvmGcType}
 */
proto.v1.PJvmInfo.prototype.getGctype = function() {
  return /** @type {!proto.v1.PJvmGcType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.v1.PJvmGcType} value
 * @return {!proto.v1.PJvmInfo} returns this
 */
proto.v1.PJvmInfo.prototype.setGctype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PAgentStat.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PAgentStat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PAgentStat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PAgentStat.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    collectinterval: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gc: (f = msg.getGc()) && proto.v1.PJvmGc.toObject(includeInstance, f),
    cpuload: (f = msg.getCpuload()) && proto.v1.PCpuLoad.toObject(includeInstance, f),
    transaction: (f = msg.getTransaction()) && proto.v1.PTransaction.toObject(includeInstance, f),
    activetrace: (f = msg.getActivetrace()) && proto.v1.PActiveTrace.toObject(includeInstance, f),
    datasourcelist: (f = msg.getDatasourcelist()) && proto.v1.PDataSourceList.toObject(includeInstance, f),
    responsetime: (f = msg.getResponsetime()) && proto.v1.PResponseTime.toObject(includeInstance, f),
    deadlock: (f = msg.getDeadlock()) && proto.v1.PDeadlock.toObject(includeInstance, f),
    filedescriptor: (f = msg.getFiledescriptor()) && proto.v1.PFileDescriptor.toObject(includeInstance, f),
    directbuffer: (f = msg.getDirectbuffer()) && proto.v1.PDirectBuffer.toObject(includeInstance, f),
    metadata: jspb.Message.getFieldWithDefault(msg, 12, ""),
    totalthread: (f = msg.getTotalthread()) && proto.v1.PTotalThread.toObject(includeInstance, f),
    loadedclass: (f = msg.getLoadedclass()) && proto.v1.PLoadedClass.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PAgentStat}
 */
proto.v1.PAgentStat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PAgentStat;
  return proto.v1.PAgentStat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PAgentStat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PAgentStat}
 */
proto.v1.PAgentStat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCollectinterval(value);
      break;
    case 3:
      var value = new proto.v1.PJvmGc;
      reader.readMessage(value,proto.v1.PJvmGc.deserializeBinaryFromReader);
      msg.setGc(value);
      break;
    case 4:
      var value = new proto.v1.PCpuLoad;
      reader.readMessage(value,proto.v1.PCpuLoad.deserializeBinaryFromReader);
      msg.setCpuload(value);
      break;
    case 5:
      var value = new proto.v1.PTransaction;
      reader.readMessage(value,proto.v1.PTransaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 6:
      var value = new proto.v1.PActiveTrace;
      reader.readMessage(value,proto.v1.PActiveTrace.deserializeBinaryFromReader);
      msg.setActivetrace(value);
      break;
    case 7:
      var value = new proto.v1.PDataSourceList;
      reader.readMessage(value,proto.v1.PDataSourceList.deserializeBinaryFromReader);
      msg.setDatasourcelist(value);
      break;
    case 8:
      var value = new proto.v1.PResponseTime;
      reader.readMessage(value,proto.v1.PResponseTime.deserializeBinaryFromReader);
      msg.setResponsetime(value);
      break;
    case 9:
      var value = new proto.v1.PDeadlock;
      reader.readMessage(value,proto.v1.PDeadlock.deserializeBinaryFromReader);
      msg.setDeadlock(value);
      break;
    case 10:
      var value = new proto.v1.PFileDescriptor;
      reader.readMessage(value,proto.v1.PFileDescriptor.deserializeBinaryFromReader);
      msg.setFiledescriptor(value);
      break;
    case 11:
      var value = new proto.v1.PDirectBuffer;
      reader.readMessage(value,proto.v1.PDirectBuffer.deserializeBinaryFromReader);
      msg.setDirectbuffer(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    case 13:
      var value = new proto.v1.PTotalThread;
      reader.readMessage(value,proto.v1.PTotalThread.deserializeBinaryFromReader);
      msg.setTotalthread(value);
      break;
    case 14:
      var value = new proto.v1.PLoadedClass;
      reader.readMessage(value,proto.v1.PLoadedClass.deserializeBinaryFromReader);
      msg.setLoadedclass(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PAgentStat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PAgentStat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PAgentStat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PAgentStat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCollectinterval();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getGc();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.v1.PJvmGc.serializeBinaryToWriter
    );
  }
  f = message.getCpuload();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.v1.PCpuLoad.serializeBinaryToWriter
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.v1.PTransaction.serializeBinaryToWriter
    );
  }
  f = message.getActivetrace();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.v1.PActiveTrace.serializeBinaryToWriter
    );
  }
  f = message.getDatasourcelist();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.v1.PDataSourceList.serializeBinaryToWriter
    );
  }
  f = message.getResponsetime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.v1.PResponseTime.serializeBinaryToWriter
    );
  }
  f = message.getDeadlock();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.v1.PDeadlock.serializeBinaryToWriter
    );
  }
  f = message.getFiledescriptor();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.v1.PFileDescriptor.serializeBinaryToWriter
    );
  }
  f = message.getDirectbuffer();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.v1.PDirectBuffer.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTotalthread();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.v1.PTotalThread.serializeBinaryToWriter
    );
  }
  f = message.getLoadedclass();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.v1.PLoadedClass.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.v1.PAgentStat.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 collectInterval = 2;
 * @return {number}
 */
proto.v1.PAgentStat.prototype.getCollectinterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.setCollectinterval = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional PJvmGc gc = 3;
 * @return {?proto.v1.PJvmGc}
 */
proto.v1.PAgentStat.prototype.getGc = function() {
  return /** @type{?proto.v1.PJvmGc} */ (
    jspb.Message.getWrapperField(this, proto.v1.PJvmGc, 3));
};


/**
 * @param {?proto.v1.PJvmGc|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setGc = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearGc = function() {
  return this.setGc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasGc = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PCpuLoad cpuLoad = 4;
 * @return {?proto.v1.PCpuLoad}
 */
proto.v1.PAgentStat.prototype.getCpuload = function() {
  return /** @type{?proto.v1.PCpuLoad} */ (
    jspb.Message.getWrapperField(this, proto.v1.PCpuLoad, 4));
};


/**
 * @param {?proto.v1.PCpuLoad|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setCpuload = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearCpuload = function() {
  return this.setCpuload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasCpuload = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PTransaction transaction = 5;
 * @return {?proto.v1.PTransaction}
 */
proto.v1.PAgentStat.prototype.getTransaction = function() {
  return /** @type{?proto.v1.PTransaction} */ (
    jspb.Message.getWrapperField(this, proto.v1.PTransaction, 5));
};


/**
 * @param {?proto.v1.PTransaction|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setTransaction = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PActiveTrace activeTrace = 6;
 * @return {?proto.v1.PActiveTrace}
 */
proto.v1.PAgentStat.prototype.getActivetrace = function() {
  return /** @type{?proto.v1.PActiveTrace} */ (
    jspb.Message.getWrapperField(this, proto.v1.PActiveTrace, 6));
};


/**
 * @param {?proto.v1.PActiveTrace|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setActivetrace = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearActivetrace = function() {
  return this.setActivetrace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasActivetrace = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PDataSourceList dataSourceList = 7;
 * @return {?proto.v1.PDataSourceList}
 */
proto.v1.PAgentStat.prototype.getDatasourcelist = function() {
  return /** @type{?proto.v1.PDataSourceList} */ (
    jspb.Message.getWrapperField(this, proto.v1.PDataSourceList, 7));
};


/**
 * @param {?proto.v1.PDataSourceList|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setDatasourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearDatasourcelist = function() {
  return this.setDatasourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasDatasourcelist = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PResponseTime responseTime = 8;
 * @return {?proto.v1.PResponseTime}
 */
proto.v1.PAgentStat.prototype.getResponsetime = function() {
  return /** @type{?proto.v1.PResponseTime} */ (
    jspb.Message.getWrapperField(this, proto.v1.PResponseTime, 8));
};


/**
 * @param {?proto.v1.PResponseTime|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setResponsetime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearResponsetime = function() {
  return this.setResponsetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasResponsetime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PDeadlock deadlock = 9;
 * @return {?proto.v1.PDeadlock}
 */
proto.v1.PAgentStat.prototype.getDeadlock = function() {
  return /** @type{?proto.v1.PDeadlock} */ (
    jspb.Message.getWrapperField(this, proto.v1.PDeadlock, 9));
};


/**
 * @param {?proto.v1.PDeadlock|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setDeadlock = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearDeadlock = function() {
  return this.setDeadlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasDeadlock = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PFileDescriptor fileDescriptor = 10;
 * @return {?proto.v1.PFileDescriptor}
 */
proto.v1.PAgentStat.prototype.getFiledescriptor = function() {
  return /** @type{?proto.v1.PFileDescriptor} */ (
    jspb.Message.getWrapperField(this, proto.v1.PFileDescriptor, 10));
};


/**
 * @param {?proto.v1.PFileDescriptor|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setFiledescriptor = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearFiledescriptor = function() {
  return this.setFiledescriptor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasFiledescriptor = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PDirectBuffer directBuffer = 11;
 * @return {?proto.v1.PDirectBuffer}
 */
proto.v1.PAgentStat.prototype.getDirectbuffer = function() {
  return /** @type{?proto.v1.PDirectBuffer} */ (
    jspb.Message.getWrapperField(this, proto.v1.PDirectBuffer, 11));
};


/**
 * @param {?proto.v1.PDirectBuffer|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setDirectbuffer = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearDirectbuffer = function() {
  return this.setDirectbuffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasDirectbuffer = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string metadata = 12;
 * @return {string}
 */
proto.v1.PAgentStat.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional PTotalThread totalThread = 13;
 * @return {?proto.v1.PTotalThread}
 */
proto.v1.PAgentStat.prototype.getTotalthread = function() {
  return /** @type{?proto.v1.PTotalThread} */ (
    jspb.Message.getWrapperField(this, proto.v1.PTotalThread, 13));
};


/**
 * @param {?proto.v1.PTotalThread|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setTotalthread = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearTotalthread = function() {
  return this.setTotalthread(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasTotalthread = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional PLoadedClass loadedClass = 14;
 * @return {?proto.v1.PLoadedClass}
 */
proto.v1.PAgentStat.prototype.getLoadedclass = function() {
  return /** @type{?proto.v1.PLoadedClass} */ (
    jspb.Message.getWrapperField(this, proto.v1.PLoadedClass, 14));
};


/**
 * @param {?proto.v1.PLoadedClass|undefined} value
 * @return {!proto.v1.PAgentStat} returns this
*/
proto.v1.PAgentStat.prototype.setLoadedclass = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PAgentStat} returns this
 */
proto.v1.PAgentStat.prototype.clearLoadedclass = function() {
  return this.setLoadedclass(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PAgentStat.prototype.hasLoadedclass = function() {
  return jspb.Message.getField(this, 14) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.PAgentStatBatch.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PAgentStatBatch.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PAgentStatBatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PAgentStatBatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PAgentStatBatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    agentstatList: jspb.Message.toObjectList(msg.getAgentstatList(),
    proto.v1.PAgentStat.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PAgentStatBatch}
 */
proto.v1.PAgentStatBatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PAgentStatBatch;
  return proto.v1.PAgentStatBatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PAgentStatBatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PAgentStatBatch}
 */
proto.v1.PAgentStatBatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.PAgentStat;
      reader.readMessage(value,proto.v1.PAgentStat.deserializeBinaryFromReader);
      msg.addAgentstat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PAgentStatBatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PAgentStatBatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PAgentStatBatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PAgentStatBatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAgentstatList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.v1.PAgentStat.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PAgentStat agentStat = 1;
 * @return {!Array<!proto.v1.PAgentStat>}
 */
proto.v1.PAgentStatBatch.prototype.getAgentstatList = function() {
  return /** @type{!Array<!proto.v1.PAgentStat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.PAgentStat, 1));
};


/**
 * @param {!Array<!proto.v1.PAgentStat>} value
 * @return {!proto.v1.PAgentStatBatch} returns this
*/
proto.v1.PAgentStatBatch.prototype.setAgentstatList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.v1.PAgentStat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.PAgentStat}
 */
proto.v1.PAgentStatBatch.prototype.addAgentstat = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.v1.PAgentStat, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.PAgentStatBatch} returns this
 */
proto.v1.PAgentStatBatch.prototype.clearAgentstatList = function() {
  return this.setAgentstatList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PDataSource.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PDataSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PDataSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PDataSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    servicetypecode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    databasename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    url: jspb.Message.getFieldWithDefault(msg, 4, ""),
    activeconnectionsize: jspb.Message.getFieldWithDefault(msg, 5, 0),
    maxconnectionsize: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PDataSource}
 */
proto.v1.PDataSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PDataSource;
  return proto.v1.PDataSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PDataSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PDataSource}
 */
proto.v1.PDataSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServicetypecode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabasename(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActiveconnectionsize(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxconnectionsize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PDataSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PDataSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PDataSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PDataSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getServicetypecode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDatabasename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getActiveconnectionsize();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMaxconnectionsize();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.v1.PDataSource.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PDataSource} returns this
 */
proto.v1.PDataSource.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 serviceTypeCode = 2;
 * @return {number}
 */
proto.v1.PDataSource.prototype.getServicetypecode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PDataSource} returns this
 */
proto.v1.PDataSource.prototype.setServicetypecode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string databaseName = 3;
 * @return {string}
 */
proto.v1.PDataSource.prototype.getDatabasename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PDataSource} returns this
 */
proto.v1.PDataSource.prototype.setDatabasename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.v1.PDataSource.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PDataSource} returns this
 */
proto.v1.PDataSource.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 activeConnectionSize = 5;
 * @return {number}
 */
proto.v1.PDataSource.prototype.getActiveconnectionsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PDataSource} returns this
 */
proto.v1.PDataSource.prototype.setActiveconnectionsize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 maxConnectionSize = 6;
 * @return {number}
 */
proto.v1.PDataSource.prototype.getMaxconnectionsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PDataSource} returns this
 */
proto.v1.PDataSource.prototype.setMaxconnectionsize = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.PDataSourceList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PDataSourceList.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PDataSourceList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PDataSourceList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PDataSourceList.toObject = function(includeInstance, msg) {
  var f, obj = {
    datasourceList: jspb.Message.toObjectList(msg.getDatasourceList(),
    proto.v1.PDataSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PDataSourceList}
 */
proto.v1.PDataSourceList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PDataSourceList;
  return proto.v1.PDataSourceList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PDataSourceList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PDataSourceList}
 */
proto.v1.PDataSourceList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.PDataSource;
      reader.readMessage(value,proto.v1.PDataSource.deserializeBinaryFromReader);
      msg.addDatasource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PDataSourceList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PDataSourceList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PDataSourceList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PDataSourceList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatasourceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.v1.PDataSource.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PDataSource dataSource = 1;
 * @return {!Array<!proto.v1.PDataSource>}
 */
proto.v1.PDataSourceList.prototype.getDatasourceList = function() {
  return /** @type{!Array<!proto.v1.PDataSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.PDataSource, 1));
};


/**
 * @param {!Array<!proto.v1.PDataSource>} value
 * @return {!proto.v1.PDataSourceList} returns this
*/
proto.v1.PDataSourceList.prototype.setDatasourceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.v1.PDataSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.PDataSource}
 */
proto.v1.PDataSourceList.prototype.addDatasource = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.v1.PDataSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.PDataSourceList} returns this
 */
proto.v1.PDataSourceList.prototype.clearDatasourceList = function() {
  return this.setDatasourceList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PFileDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PFileDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PFileDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PFileDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    openfiledescriptorcount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PFileDescriptor}
 */
proto.v1.PFileDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PFileDescriptor;
  return proto.v1.PFileDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PFileDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PFileDescriptor}
 */
proto.v1.PFileDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOpenfiledescriptorcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PFileDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PFileDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PFileDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PFileDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenfiledescriptorcount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 openFileDescriptorCount = 1;
 * @return {number}
 */
proto.v1.PFileDescriptor.prototype.getOpenfiledescriptorcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PFileDescriptor} returns this
 */
proto.v1.PFileDescriptor.prototype.setOpenfiledescriptorcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PJvmGc.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PJvmGc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PJvmGc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PJvmGc.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    jvmmemoryheapused: jspb.Message.getFieldWithDefault(msg, 2, 0),
    jvmmemoryheapmax: jspb.Message.getFieldWithDefault(msg, 3, 0),
    jvmmemorynonheapused: jspb.Message.getFieldWithDefault(msg, 4, 0),
    jvmmemorynonheapmax: jspb.Message.getFieldWithDefault(msg, 5, 0),
    jvmgcoldcount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    jvmgcoldtime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    jvmgcdetailed: (f = msg.getJvmgcdetailed()) && proto.v1.PJvmGcDetailed.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PJvmGc}
 */
proto.v1.PJvmGc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PJvmGc;
  return proto.v1.PJvmGc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PJvmGc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PJvmGc}
 */
proto.v1.PJvmGc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.v1.PJvmGcType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJvmmemoryheapused(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJvmmemoryheapmax(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJvmmemorynonheapused(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJvmmemorynonheapmax(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJvmgcoldcount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJvmgcoldtime(value);
      break;
    case 8:
      var value = new proto.v1.PJvmGcDetailed;
      reader.readMessage(value,proto.v1.PJvmGcDetailed.deserializeBinaryFromReader);
      msg.setJvmgcdetailed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PJvmGc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PJvmGc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PJvmGc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PJvmGc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getJvmmemoryheapused();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getJvmmemoryheapmax();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getJvmmemorynonheapused();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getJvmmemorynonheapmax();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getJvmgcoldcount();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getJvmgcoldtime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getJvmgcdetailed();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.v1.PJvmGcDetailed.serializeBinaryToWriter
    );
  }
};


/**
 * optional PJvmGcType type = 1;
 * @return {!proto.v1.PJvmGcType}
 */
proto.v1.PJvmGc.prototype.getType = function() {
  return /** @type {!proto.v1.PJvmGcType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.v1.PJvmGcType} value
 * @return {!proto.v1.PJvmGc} returns this
 */
proto.v1.PJvmGc.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 jvmMemoryHeapUsed = 2;
 * @return {number}
 */
proto.v1.PJvmGc.prototype.getJvmmemoryheapused = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGc} returns this
 */
proto.v1.PJvmGc.prototype.setJvmmemoryheapused = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 jvmMemoryHeapMax = 3;
 * @return {number}
 */
proto.v1.PJvmGc.prototype.getJvmmemoryheapmax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGc} returns this
 */
proto.v1.PJvmGc.prototype.setJvmmemoryheapmax = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 jvmMemoryNonHeapUsed = 4;
 * @return {number}
 */
proto.v1.PJvmGc.prototype.getJvmmemorynonheapused = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGc} returns this
 */
proto.v1.PJvmGc.prototype.setJvmmemorynonheapused = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 jvmMemoryNonHeapMax = 5;
 * @return {number}
 */
proto.v1.PJvmGc.prototype.getJvmmemorynonheapmax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGc} returns this
 */
proto.v1.PJvmGc.prototype.setJvmmemorynonheapmax = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 jvmGcOldCount = 6;
 * @return {number}
 */
proto.v1.PJvmGc.prototype.getJvmgcoldcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGc} returns this
 */
proto.v1.PJvmGc.prototype.setJvmgcoldcount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 jvmGcOldTime = 7;
 * @return {number}
 */
proto.v1.PJvmGc.prototype.getJvmgcoldtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGc} returns this
 */
proto.v1.PJvmGc.prototype.setJvmgcoldtime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional PJvmGcDetailed jvmGcDetailed = 8;
 * @return {?proto.v1.PJvmGcDetailed}
 */
proto.v1.PJvmGc.prototype.getJvmgcdetailed = function() {
  return /** @type{?proto.v1.PJvmGcDetailed} */ (
    jspb.Message.getWrapperField(this, proto.v1.PJvmGcDetailed, 8));
};


/**
 * @param {?proto.v1.PJvmGcDetailed|undefined} value
 * @return {!proto.v1.PJvmGc} returns this
*/
proto.v1.PJvmGc.prototype.setJvmgcdetailed = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PJvmGc} returns this
 */
proto.v1.PJvmGc.prototype.clearJvmgcdetailed = function() {
  return this.setJvmgcdetailed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PJvmGc.prototype.hasJvmgcdetailed = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PJvmGcDetailed.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PJvmGcDetailed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PJvmGcDetailed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PJvmGcDetailed.toObject = function(includeInstance, msg) {
  var f, obj = {
    jvmgcnewcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    jvmgcnewtime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    jvmpoolcodecacheused: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    jvmpoolnewgenused: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    jvmpoololdgenused: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    jvmpoolsurvivorspaceused: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    jvmpoolpermgenused: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    jvmpoolmetaspaceused: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PJvmGcDetailed}
 */
proto.v1.PJvmGcDetailed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PJvmGcDetailed;
  return proto.v1.PJvmGcDetailed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PJvmGcDetailed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PJvmGcDetailed}
 */
proto.v1.PJvmGcDetailed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJvmgcnewcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJvmgcnewtime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setJvmpoolcodecacheused(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setJvmpoolnewgenused(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setJvmpoololdgenused(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setJvmpoolsurvivorspaceused(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setJvmpoolpermgenused(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setJvmpoolmetaspaceused(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PJvmGcDetailed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PJvmGcDetailed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PJvmGcDetailed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PJvmGcDetailed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJvmgcnewcount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getJvmgcnewtime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getJvmpoolcodecacheused();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getJvmpoolnewgenused();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getJvmpoololdgenused();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getJvmpoolsurvivorspaceused();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getJvmpoolpermgenused();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getJvmpoolmetaspaceused();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional int64 jvmGcNewCount = 1;
 * @return {number}
 */
proto.v1.PJvmGcDetailed.prototype.getJvmgcnewcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGcDetailed} returns this
 */
proto.v1.PJvmGcDetailed.prototype.setJvmgcnewcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 jvmGcNewTime = 2;
 * @return {number}
 */
proto.v1.PJvmGcDetailed.prototype.getJvmgcnewtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGcDetailed} returns this
 */
proto.v1.PJvmGcDetailed.prototype.setJvmgcnewtime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double jvmPoolCodeCacheUsed = 3;
 * @return {number}
 */
proto.v1.PJvmGcDetailed.prototype.getJvmpoolcodecacheused = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGcDetailed} returns this
 */
proto.v1.PJvmGcDetailed.prototype.setJvmpoolcodecacheused = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double jvmPoolNewGenUsed = 4;
 * @return {number}
 */
proto.v1.PJvmGcDetailed.prototype.getJvmpoolnewgenused = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGcDetailed} returns this
 */
proto.v1.PJvmGcDetailed.prototype.setJvmpoolnewgenused = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double jvmPoolOldGenUsed = 5;
 * @return {number}
 */
proto.v1.PJvmGcDetailed.prototype.getJvmpoololdgenused = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGcDetailed} returns this
 */
proto.v1.PJvmGcDetailed.prototype.setJvmpoololdgenused = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double jvmPoolSurvivorSpaceUsed = 6;
 * @return {number}
 */
proto.v1.PJvmGcDetailed.prototype.getJvmpoolsurvivorspaceused = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGcDetailed} returns this
 */
proto.v1.PJvmGcDetailed.prototype.setJvmpoolsurvivorspaceused = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double jvmPoolPermGenUsed = 7;
 * @return {number}
 */
proto.v1.PJvmGcDetailed.prototype.getJvmpoolpermgenused = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGcDetailed} returns this
 */
proto.v1.PJvmGcDetailed.prototype.setJvmpoolpermgenused = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double jvmPoolMetaspaceUsed = 8;
 * @return {number}
 */
proto.v1.PJvmGcDetailed.prototype.getJvmpoolmetaspaceused = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PJvmGcDetailed} returns this
 */
proto.v1.PJvmGcDetailed.prototype.setJvmpoolmetaspaceused = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PCpuLoad.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PCpuLoad.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PCpuLoad} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PCpuLoad.toObject = function(includeInstance, msg) {
  var f, obj = {
    jvmcpuload: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    systemcpuload: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PCpuLoad}
 */
proto.v1.PCpuLoad.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PCpuLoad;
  return proto.v1.PCpuLoad.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PCpuLoad} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PCpuLoad}
 */
proto.v1.PCpuLoad.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setJvmcpuload(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSystemcpuload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PCpuLoad.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PCpuLoad.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PCpuLoad} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PCpuLoad.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJvmcpuload();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getSystemcpuload();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double jvmCpuLoad = 1;
 * @return {number}
 */
proto.v1.PCpuLoad.prototype.getJvmcpuload = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PCpuLoad} returns this
 */
proto.v1.PCpuLoad.prototype.setJvmcpuload = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double systemCpuLoad = 2;
 * @return {number}
 */
proto.v1.PCpuLoad.prototype.getSystemcpuload = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PCpuLoad} returns this
 */
proto.v1.PCpuLoad.prototype.setSystemcpuload = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PTransaction.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PTransaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PTransaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PTransaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    samplednewcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sampledcontinuationcount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    unsamplednewcount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    unsampledcontinuationcount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    skippednewcount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    skippedcontinuationcount: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PTransaction}
 */
proto.v1.PTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PTransaction;
  return proto.v1.PTransaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PTransaction}
 */
proto.v1.PTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSamplednewcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSampledcontinuationcount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnsamplednewcount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnsampledcontinuationcount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSkippednewcount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSkippedcontinuationcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSamplednewcount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSampledcontinuationcount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUnsamplednewcount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUnsampledcontinuationcount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getSkippednewcount();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getSkippedcontinuationcount();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional int64 sampledNewCount = 2;
 * @return {number}
 */
proto.v1.PTransaction.prototype.getSamplednewcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PTransaction} returns this
 */
proto.v1.PTransaction.prototype.setSamplednewcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 sampledContinuationCount = 3;
 * @return {number}
 */
proto.v1.PTransaction.prototype.getSampledcontinuationcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PTransaction} returns this
 */
proto.v1.PTransaction.prototype.setSampledcontinuationcount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 unsampledNewCount = 4;
 * @return {number}
 */
proto.v1.PTransaction.prototype.getUnsamplednewcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PTransaction} returns this
 */
proto.v1.PTransaction.prototype.setUnsamplednewcount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 unsampledContinuationCount = 5;
 * @return {number}
 */
proto.v1.PTransaction.prototype.getUnsampledcontinuationcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PTransaction} returns this
 */
proto.v1.PTransaction.prototype.setUnsampledcontinuationcount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 skippedNewCount = 6;
 * @return {number}
 */
proto.v1.PTransaction.prototype.getSkippednewcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PTransaction} returns this
 */
proto.v1.PTransaction.prototype.setSkippednewcount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 skippedContinuationCount = 7;
 * @return {number}
 */
proto.v1.PTransaction.prototype.getSkippedcontinuationcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PTransaction} returns this
 */
proto.v1.PTransaction.prototype.setSkippedcontinuationcount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.PActiveTraceHistogram.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PActiveTraceHistogram.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PActiveTraceHistogram.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PActiveTraceHistogram} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PActiveTraceHistogram.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, 0),
    histogramschematype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    activetracecountList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PActiveTraceHistogram}
 */
proto.v1.PActiveTraceHistogram.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PActiveTraceHistogram;
  return proto.v1.PActiveTraceHistogram.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PActiveTraceHistogram} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PActiveTraceHistogram}
 */
proto.v1.PActiveTraceHistogram.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHistogramschematype(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addActivetracecount(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PActiveTraceHistogram.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PActiveTraceHistogram.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PActiveTraceHistogram} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PActiveTraceHistogram.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHistogramschematype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getActivetracecountList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 version = 1;
 * @return {number}
 */
proto.v1.PActiveTraceHistogram.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PActiveTraceHistogram} returns this
 */
proto.v1.PActiveTraceHistogram.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 histogramSchemaType = 2;
 * @return {number}
 */
proto.v1.PActiveTraceHistogram.prototype.getHistogramschematype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PActiveTraceHistogram} returns this
 */
proto.v1.PActiveTraceHistogram.prototype.setHistogramschematype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated int32 activeTraceCount = 3;
 * @return {!Array<number>}
 */
proto.v1.PActiveTraceHistogram.prototype.getActivetracecountList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.v1.PActiveTraceHistogram} returns this
 */
proto.v1.PActiveTraceHistogram.prototype.setActivetracecountList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.v1.PActiveTraceHistogram} returns this
 */
proto.v1.PActiveTraceHistogram.prototype.addActivetracecount = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.PActiveTraceHistogram} returns this
 */
proto.v1.PActiveTraceHistogram.prototype.clearActivetracecountList = function() {
  return this.setActivetracecountList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PActiveTrace.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PActiveTrace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PActiveTrace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PActiveTrace.toObject = function(includeInstance, msg) {
  var f, obj = {
    histogram: (f = msg.getHistogram()) && proto.v1.PActiveTraceHistogram.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PActiveTrace}
 */
proto.v1.PActiveTrace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PActiveTrace;
  return proto.v1.PActiveTrace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PActiveTrace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PActiveTrace}
 */
proto.v1.PActiveTrace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.PActiveTraceHistogram;
      reader.readMessage(value,proto.v1.PActiveTraceHistogram.deserializeBinaryFromReader);
      msg.setHistogram(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PActiveTrace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PActiveTrace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PActiveTrace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PActiveTrace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHistogram();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.v1.PActiveTraceHistogram.serializeBinaryToWriter
    );
  }
};


/**
 * optional PActiveTraceHistogram histogram = 1;
 * @return {?proto.v1.PActiveTraceHistogram}
 */
proto.v1.PActiveTrace.prototype.getHistogram = function() {
  return /** @type{?proto.v1.PActiveTraceHistogram} */ (
    jspb.Message.getWrapperField(this, proto.v1.PActiveTraceHistogram, 1));
};


/**
 * @param {?proto.v1.PActiveTraceHistogram|undefined} value
 * @return {!proto.v1.PActiveTrace} returns this
*/
proto.v1.PActiveTrace.prototype.setHistogram = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PActiveTrace} returns this
 */
proto.v1.PActiveTrace.prototype.clearHistogram = function() {
  return this.setHistogram(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PActiveTrace.prototype.hasHistogram = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PResponseTime.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PResponseTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PResponseTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PResponseTime.toObject = function(includeInstance, msg) {
  var f, obj = {
    avg: jspb.Message.getFieldWithDefault(msg, 1, 0),
    max: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PResponseTime}
 */
proto.v1.PResponseTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PResponseTime;
  return proto.v1.PResponseTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PResponseTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PResponseTime}
 */
proto.v1.PResponseTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAvg(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PResponseTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PResponseTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PResponseTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PResponseTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAvg();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 avg = 1;
 * @return {number}
 */
proto.v1.PResponseTime.prototype.getAvg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PResponseTime} returns this
 */
proto.v1.PResponseTime.prototype.setAvg = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 max = 2;
 * @return {number}
 */
proto.v1.PResponseTime.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PResponseTime} returns this
 */
proto.v1.PResponseTime.prototype.setMax = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.PDeadlock.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PDeadlock.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PDeadlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PDeadlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PDeadlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    threaddumpList: jspb.Message.toObjectList(msg.getThreaddumpList(),
    v1_ThreadDump_pb.PThreadDump.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PDeadlock}
 */
proto.v1.PDeadlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PDeadlock;
  return proto.v1.PDeadlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PDeadlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PDeadlock}
 */
proto.v1.PDeadlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 2:
      var value = new v1_ThreadDump_pb.PThreadDump;
      reader.readMessage(value,v1_ThreadDump_pb.PThreadDump.deserializeBinaryFromReader);
      msg.addThreaddump(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PDeadlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PDeadlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PDeadlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PDeadlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getThreaddumpList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      v1_ThreadDump_pb.PThreadDump.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.v1.PDeadlock.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PDeadlock} returns this
 */
proto.v1.PDeadlock.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated PThreadDump threadDump = 2;
 * @return {!Array<!proto.v1.PThreadDump>}
 */
proto.v1.PDeadlock.prototype.getThreaddumpList = function() {
  return /** @type{!Array<!proto.v1.PThreadDump>} */ (
    jspb.Message.getRepeatedWrapperField(this, v1_ThreadDump_pb.PThreadDump, 2));
};


/**
 * @param {!Array<!proto.v1.PThreadDump>} value
 * @return {!proto.v1.PDeadlock} returns this
*/
proto.v1.PDeadlock.prototype.setThreaddumpList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.v1.PThreadDump=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.PThreadDump}
 */
proto.v1.PDeadlock.prototype.addThreaddump = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.v1.PThreadDump, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.PDeadlock} returns this
 */
proto.v1.PDeadlock.prototype.clearThreaddumpList = function() {
  return this.setThreaddumpList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PDirectBuffer.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PDirectBuffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PDirectBuffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PDirectBuffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    directcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    directmemoryused: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mappedcount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mappedmemoryused: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PDirectBuffer}
 */
proto.v1.PDirectBuffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PDirectBuffer;
  return proto.v1.PDirectBuffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PDirectBuffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PDirectBuffer}
 */
proto.v1.PDirectBuffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDirectcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDirectmemoryused(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMappedcount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMappedmemoryused(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PDirectBuffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PDirectBuffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PDirectBuffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PDirectBuffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirectcount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDirectmemoryused();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMappedcount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMappedmemoryused();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 directCount = 1;
 * @return {number}
 */
proto.v1.PDirectBuffer.prototype.getDirectcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PDirectBuffer} returns this
 */
proto.v1.PDirectBuffer.prototype.setDirectcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 directMemoryUsed = 2;
 * @return {number}
 */
proto.v1.PDirectBuffer.prototype.getDirectmemoryused = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PDirectBuffer} returns this
 */
proto.v1.PDirectBuffer.prototype.setDirectmemoryused = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 mappedCount = 3;
 * @return {number}
 */
proto.v1.PDirectBuffer.prototype.getMappedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PDirectBuffer} returns this
 */
proto.v1.PDirectBuffer.prototype.setMappedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 mappedMemoryUsed = 4;
 * @return {number}
 */
proto.v1.PDirectBuffer.prototype.getMappedmemoryused = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PDirectBuffer} returns this
 */
proto.v1.PDirectBuffer.prototype.setMappedmemoryused = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PTotalThread.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PTotalThread.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PTotalThread} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PTotalThread.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalthreadcount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PTotalThread}
 */
proto.v1.PTotalThread.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PTotalThread;
  return proto.v1.PTotalThread.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PTotalThread} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PTotalThread}
 */
proto.v1.PTotalThread.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalthreadcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PTotalThread.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PTotalThread.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PTotalThread} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PTotalThread.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalthreadcount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 totalThreadCount = 1;
 * @return {number}
 */
proto.v1.PTotalThread.prototype.getTotalthreadcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PTotalThread} returns this
 */
proto.v1.PTotalThread.prototype.setTotalthreadcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PLoadedClass.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PLoadedClass.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PLoadedClass} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PLoadedClass.toObject = function(includeInstance, msg) {
  var f, obj = {
    loadedclasscount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    unloadedclasscount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PLoadedClass}
 */
proto.v1.PLoadedClass.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PLoadedClass;
  return proto.v1.PLoadedClass.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PLoadedClass} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PLoadedClass}
 */
proto.v1.PLoadedClass.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLoadedclasscount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnloadedclasscount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PLoadedClass.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PLoadedClass.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PLoadedClass} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PLoadedClass.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLoadedclasscount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUnloadedclasscount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 loadedClassCount = 1;
 * @return {number}
 */
proto.v1.PLoadedClass.prototype.getLoadedclasscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PLoadedClass} returns this
 */
proto.v1.PLoadedClass.prototype.setLoadedclasscount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 unloadedClassCount = 2;
 * @return {number}
 */
proto.v1.PLoadedClass.prototype.getUnloadedclasscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PLoadedClass} returns this
 */
proto.v1.PLoadedClass.prototype.setUnloadedclasscount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.PAgentUriStat.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PAgentUriStat.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PAgentUriStat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PAgentUriStat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PAgentUriStat.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bucketversion: jspb.Message.getFieldWithDefault(msg, 2, 0),
    eachuristatList: jspb.Message.toObjectList(msg.getEachuristatList(),
    proto.v1.PEachUriStat.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PAgentUriStat}
 */
proto.v1.PAgentUriStat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PAgentUriStat;
  return proto.v1.PAgentUriStat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PAgentUriStat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PAgentUriStat}
 */
proto.v1.PAgentUriStat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBucketversion(value);
      break;
    case 3:
      var value = new proto.v1.PEachUriStat;
      reader.readMessage(value,proto.v1.PEachUriStat.deserializeBinaryFromReader);
      msg.addEachuristat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PAgentUriStat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PAgentUriStat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PAgentUriStat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PAgentUriStat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBucketversion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getEachuristatList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.v1.PEachUriStat.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.v1.PAgentUriStat.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PAgentUriStat} returns this
 */
proto.v1.PAgentUriStat.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 bucketVersion = 2;
 * @return {number}
 */
proto.v1.PAgentUriStat.prototype.getBucketversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PAgentUriStat} returns this
 */
proto.v1.PAgentUriStat.prototype.setBucketversion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated PEachUriStat eachUriStat = 3;
 * @return {!Array<!proto.v1.PEachUriStat>}
 */
proto.v1.PAgentUriStat.prototype.getEachuristatList = function() {
  return /** @type{!Array<!proto.v1.PEachUriStat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.PEachUriStat, 3));
};


/**
 * @param {!Array<!proto.v1.PEachUriStat>} value
 * @return {!proto.v1.PAgentUriStat} returns this
*/
proto.v1.PAgentUriStat.prototype.setEachuristatList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.v1.PEachUriStat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.PEachUriStat}
 */
proto.v1.PAgentUriStat.prototype.addEachuristat = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.v1.PEachUriStat, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.PAgentUriStat} returns this
 */
proto.v1.PAgentUriStat.prototype.clearEachuristatList = function() {
  return this.setEachuristatList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PEachUriStat.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PEachUriStat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PEachUriStat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PEachUriStat.toObject = function(includeInstance, msg) {
  var f, obj = {
    uri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalhistogram: (f = msg.getTotalhistogram()) && proto.v1.PUriHistogram.toObject(includeInstance, f),
    failedhistogram: (f = msg.getFailedhistogram()) && proto.v1.PUriHistogram.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PEachUriStat}
 */
proto.v1.PEachUriStat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PEachUriStat;
  return proto.v1.PEachUriStat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PEachUriStat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PEachUriStat}
 */
proto.v1.PEachUriStat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 2:
      var value = new proto.v1.PUriHistogram;
      reader.readMessage(value,proto.v1.PUriHistogram.deserializeBinaryFromReader);
      msg.setTotalhistogram(value);
      break;
    case 3:
      var value = new proto.v1.PUriHistogram;
      reader.readMessage(value,proto.v1.PUriHistogram.deserializeBinaryFromReader);
      msg.setFailedhistogram(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PEachUriStat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PEachUriStat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PEachUriStat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PEachUriStat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalhistogram();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.v1.PUriHistogram.serializeBinaryToWriter
    );
  }
  f = message.getFailedhistogram();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.v1.PUriHistogram.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uri = 1;
 * @return {string}
 */
proto.v1.PEachUriStat.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.PEachUriStat} returns this
 */
proto.v1.PEachUriStat.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PUriHistogram totalHistogram = 2;
 * @return {?proto.v1.PUriHistogram}
 */
proto.v1.PEachUriStat.prototype.getTotalhistogram = function() {
  return /** @type{?proto.v1.PUriHistogram} */ (
    jspb.Message.getWrapperField(this, proto.v1.PUriHistogram, 2));
};


/**
 * @param {?proto.v1.PUriHistogram|undefined} value
 * @return {!proto.v1.PEachUriStat} returns this
*/
proto.v1.PEachUriStat.prototype.setTotalhistogram = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PEachUriStat} returns this
 */
proto.v1.PEachUriStat.prototype.clearTotalhistogram = function() {
  return this.setTotalhistogram(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PEachUriStat.prototype.hasTotalhistogram = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PUriHistogram failedHistogram = 3;
 * @return {?proto.v1.PUriHistogram}
 */
proto.v1.PEachUriStat.prototype.getFailedhistogram = function() {
  return /** @type{?proto.v1.PUriHistogram} */ (
    jspb.Message.getWrapperField(this, proto.v1.PUriHistogram, 3));
};


/**
 * @param {?proto.v1.PUriHistogram|undefined} value
 * @return {!proto.v1.PEachUriStat} returns this
*/
proto.v1.PEachUriStat.prototype.setFailedhistogram = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.PEachUriStat} returns this
 */
proto.v1.PEachUriStat.prototype.clearFailedhistogram = function() {
  return this.setFailedhistogram(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.PEachUriStat.prototype.hasFailedhistogram = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.PUriHistogram.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.PUriHistogram.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.PUriHistogram.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.PUriHistogram} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PUriHistogram.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    avg: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    max: jspb.Message.getFieldWithDefault(msg, 3, 0),
    histogramList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.PUriHistogram}
 */
proto.v1.PUriHistogram.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.PUriHistogram;
  return proto.v1.PUriHistogram.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.PUriHistogram} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.PUriHistogram}
 */
proto.v1.PUriHistogram.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAvg(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMax(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHistogram(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.PUriHistogram.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.PUriHistogram.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.PUriHistogram} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.PUriHistogram.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAvg();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getHistogramList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.v1.PUriHistogram.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PUriHistogram} returns this
 */
proto.v1.PUriHistogram.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double avg = 2;
 * @return {number}
 */
proto.v1.PUriHistogram.prototype.getAvg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PUriHistogram} returns this
 */
proto.v1.PUriHistogram.prototype.setAvg = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int64 max = 3;
 * @return {number}
 */
proto.v1.PUriHistogram.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.PUriHistogram} returns this
 */
proto.v1.PUriHistogram.prototype.setMax = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated int32 histogram = 4;
 * @return {!Array<number>}
 */
proto.v1.PUriHistogram.prototype.getHistogramList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.v1.PUriHistogram} returns this
 */
proto.v1.PUriHistogram.prototype.setHistogramList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.v1.PUriHistogram} returns this
 */
proto.v1.PUriHistogram.prototype.addHistogram = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.PUriHistogram} returns this
 */
proto.v1.PUriHistogram.prototype.clearHistogramList = function() {
  return this.setHistogramList([]);
};


/**
 * @enum {number}
 */
proto.v1.PJvmGcType = {
  JVM_GC_TYPE_UNKNOWN: 0,
  JVM_GC_TYPE_SERIAL: 1,
  JVM_GC_TYPE_PARALLEL: 2,
  JVM_GC_TYPE_CMS: 3,
  JVM_GC_TYPE_G1: 4
};

goog.object.extend(exports, proto.v1);
